###############################################################
# NOTE: THIS FILE IS GENERATED BY GENERATE_API.PY. DO NOT EDIT!
###############################################################
from typing import Optional, List
from google.protobuf.timestamp_pb2 import Timestamp
from google.protobuf.duration_pb2 import Duration
# API imports
from ...base import Action, Datatype
from ....dsl.compiler.registry import register_action
from ..native import run_unary, run_streaming, payload_from_action
# Protobuf imports
from ....protocol.services import {{ filename }}_pb2
from ....protocol.services import {{ filename }}_pb2_grpc
{% if imports | length > 0 %}
# Type imports
from ...datatypes import {{ param_file }} as params
{% for _import in imports %}
{{ _import }}
{% endfor %}
{% endif %}

# Static stub object to be set at file import time
STUB: {{ filename }}_pb2_grpc.{{ service_name }}Stub = None

{{ comment }}

{% for stub in stubs %}
@register_action
class {{ stub.name }}(Action):
    {% if stub.comment != None %}
    {{ stub.comment }}
    {% endif %}
    {% for field in stub.fields %}
    {% if field.enum != None %}
    from enum import Enum
    class {{ field.enum.name }}(int, Enum):
        {% if field.enum.comment != None %}
        {{ field.enum.comment }}
        {% endif %}
        {% for value in field.enum.values %}
        {{ value.name }} = {{ loop.index - 1 }} 
        {% if value.comment != None %}
        {{ value.comment }}
        {% endif %}
        {% endfor %}
    {% endif %}
    {{ field.name }}: {{ field.type }}
    {% if field.comment != None %}
    {{ field.comment }}
    {% endif %}
    {% endfor %}

    async def execute(self):
        req = {{ filename }}_pb2.{{ stub.name }}Request()
        ParseDict(payload_from_action(self), req)
        metadata = [
            ('identity', 'internal')
        ]
        {% if stub.streaming %}
        return await run_streaming(STUB.{{ stub.name }}, req, metadata=metadata)

        {% else %}
        return await run_unary(STUB.{{ stub.name }}, req, metadata=metadata)

        {% endif %}
{% endfor %}
